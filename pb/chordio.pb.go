// Code generated by protoc-gen-go. DO NOT EDIT.
// source: chordio.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Node struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Bind                 string   `protobuf:"bytes,2,opt,name=bind,proto3" json:"bind,omitempty"`
	Pred                 *Node    `protobuf:"bytes,3,opt,name=pred,proto3" json:"pred,omitempty"`
	Succ                 *Node    `protobuf:"bytes,4,opt,name=succ,proto3" json:"succ,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{0}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Node) GetBind() string {
	if m != nil {
		return m.Bind
	}
	return ""
}

func (m *Node) GetPred() *Node {
	if m != nil {
		return m.Pred
	}
	return nil
}

func (m *Node) GetSucc() *Node {
	if m != nil {
		return m.Succ
	}
	return nil
}

type FingerTableEntry struct {
	Start                uint64   `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  uint64   `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	NodeID               uint64   `protobuf:"varint,3,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FingerTableEntry) Reset()         { *m = FingerTableEntry{} }
func (m *FingerTableEntry) String() string { return proto.CompactTextString(m) }
func (*FingerTableEntry) ProtoMessage()    {}
func (*FingerTableEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{1}
}

func (m *FingerTableEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FingerTableEntry.Unmarshal(m, b)
}
func (m *FingerTableEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FingerTableEntry.Marshal(b, m, deterministic)
}
func (m *FingerTableEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FingerTableEntry.Merge(m, src)
}
func (m *FingerTableEntry) XXX_Size() int {
	return xxx_messageInfo_FingerTableEntry.Size(m)
}
func (m *FingerTableEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_FingerTableEntry.DiscardUnknown(m)
}

var xxx_messageInfo_FingerTableEntry proto.InternalMessageInfo

func (m *FingerTableEntry) GetStart() uint64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *FingerTableEntry) GetEnd() uint64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *FingerTableEntry) GetNodeID() uint64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

type FingerTable struct {
	Entries              []*FingerTableEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FingerTable) Reset()         { *m = FingerTable{} }
func (m *FingerTable) String() string { return proto.CompactTextString(m) }
func (*FingerTable) ProtoMessage()    {}
func (*FingerTable) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{2}
}

func (m *FingerTable) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FingerTable.Unmarshal(m, b)
}
func (m *FingerTable) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FingerTable.Marshal(b, m, deterministic)
}
func (m *FingerTable) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FingerTable.Merge(m, src)
}
func (m *FingerTable) XXX_Size() int {
	return xxx_messageInfo_FingerTable.Size(m)
}
func (m *FingerTable) XXX_DiscardUnknown() {
	xxx_messageInfo_FingerTable.DiscardUnknown(m)
}

var xxx_messageInfo_FingerTable proto.InternalMessageInfo

func (m *FingerTable) GetEntries() []*FingerTableEntry {
	if m != nil {
		return m.Entries
	}
	return nil
}

type ClosestPrecedingFingerRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClosestPrecedingFingerRequest) Reset()         { *m = ClosestPrecedingFingerRequest{} }
func (m *ClosestPrecedingFingerRequest) String() string { return proto.CompactTextString(m) }
func (*ClosestPrecedingFingerRequest) ProtoMessage()    {}
func (*ClosestPrecedingFingerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{3}
}

func (m *ClosestPrecedingFingerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClosestPrecedingFingerRequest.Unmarshal(m, b)
}
func (m *ClosestPrecedingFingerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClosestPrecedingFingerRequest.Marshal(b, m, deterministic)
}
func (m *ClosestPrecedingFingerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClosestPrecedingFingerRequest.Merge(m, src)
}
func (m *ClosestPrecedingFingerRequest) XXX_Size() int {
	return xxx_messageInfo_ClosestPrecedingFingerRequest.Size(m)
}
func (m *ClosestPrecedingFingerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClosestPrecedingFingerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClosestPrecedingFingerRequest proto.InternalMessageInfo

func (m *ClosestPrecedingFingerRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ClosestPrecedingFingerResponse struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClosestPrecedingFingerResponse) Reset()         { *m = ClosestPrecedingFingerResponse{} }
func (m *ClosestPrecedingFingerResponse) String() string { return proto.CompactTextString(m) }
func (*ClosestPrecedingFingerResponse) ProtoMessage()    {}
func (*ClosestPrecedingFingerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{4}
}

func (m *ClosestPrecedingFingerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClosestPrecedingFingerResponse.Unmarshal(m, b)
}
func (m *ClosestPrecedingFingerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClosestPrecedingFingerResponse.Marshal(b, m, deterministic)
}
func (m *ClosestPrecedingFingerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClosestPrecedingFingerResponse.Merge(m, src)
}
func (m *ClosestPrecedingFingerResponse) XXX_Size() int {
	return xxx_messageInfo_ClosestPrecedingFingerResponse.Size(m)
}
func (m *ClosestPrecedingFingerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClosestPrecedingFingerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClosestPrecedingFingerResponse proto.InternalMessageInfo

func (m *ClosestPrecedingFingerResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type JoinRingRequest struct {
	Introducer           *Node    `protobuf:"bytes,1,opt,name=introducer,proto3" json:"introducer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRingRequest) Reset()         { *m = JoinRingRequest{} }
func (m *JoinRingRequest) String() string { return proto.CompactTextString(m) }
func (*JoinRingRequest) ProtoMessage()    {}
func (*JoinRingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{5}
}

func (m *JoinRingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRingRequest.Unmarshal(m, b)
}
func (m *JoinRingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRingRequest.Marshal(b, m, deterministic)
}
func (m *JoinRingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRingRequest.Merge(m, src)
}
func (m *JoinRingRequest) XXX_Size() int {
	return xxx_messageInfo_JoinRingRequest.Size(m)
}
func (m *JoinRingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRingRequest proto.InternalMessageInfo

func (m *JoinRingRequest) GetIntroducer() *Node {
	if m != nil {
		return m.Introducer
	}
	return nil
}

type JoinRingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JoinRingResponse) Reset()         { *m = JoinRingResponse{} }
func (m *JoinRingResponse) String() string { return proto.CompactTextString(m) }
func (*JoinRingResponse) ProtoMessage()    {}
func (*JoinRingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{6}
}

func (m *JoinRingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JoinRingResponse.Unmarshal(m, b)
}
func (m *JoinRingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JoinRingResponse.Marshal(b, m, deterministic)
}
func (m *JoinRingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JoinRingResponse.Merge(m, src)
}
func (m *JoinRingResponse) XXX_Size() int {
	return xxx_messageInfo_JoinRingResponse.Size(m)
}
func (m *JoinRingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JoinRingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JoinRingResponse proto.InternalMessageInfo

type FindPredecessorRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindPredecessorRequest) Reset()         { *m = FindPredecessorRequest{} }
func (m *FindPredecessorRequest) String() string { return proto.CompactTextString(m) }
func (*FindPredecessorRequest) ProtoMessage()    {}
func (*FindPredecessorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{7}
}

func (m *FindPredecessorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindPredecessorRequest.Unmarshal(m, b)
}
func (m *FindPredecessorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindPredecessorRequest.Marshal(b, m, deterministic)
}
func (m *FindPredecessorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindPredecessorRequest.Merge(m, src)
}
func (m *FindPredecessorRequest) XXX_Size() int {
	return xxx_messageInfo_FindPredecessorRequest.Size(m)
}
func (m *FindPredecessorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindPredecessorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindPredecessorRequest proto.InternalMessageInfo

func (m *FindPredecessorRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FindPredecessorResponse struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindPredecessorResponse) Reset()         { *m = FindPredecessorResponse{} }
func (m *FindPredecessorResponse) String() string { return proto.CompactTextString(m) }
func (*FindPredecessorResponse) ProtoMessage()    {}
func (*FindPredecessorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{8}
}

func (m *FindPredecessorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindPredecessorResponse.Unmarshal(m, b)
}
func (m *FindPredecessorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindPredecessorResponse.Marshal(b, m, deterministic)
}
func (m *FindPredecessorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindPredecessorResponse.Merge(m, src)
}
func (m *FindPredecessorResponse) XXX_Size() int {
	return xxx_messageInfo_FindPredecessorResponse.Size(m)
}
func (m *FindPredecessorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindPredecessorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindPredecessorResponse proto.InternalMessageInfo

func (m *FindPredecessorResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type FindSuccessorRequest struct {
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSuccessorRequest) Reset()         { *m = FindSuccessorRequest{} }
func (m *FindSuccessorRequest) String() string { return proto.CompactTextString(m) }
func (*FindSuccessorRequest) ProtoMessage()    {}
func (*FindSuccessorRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{9}
}

func (m *FindSuccessorRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSuccessorRequest.Unmarshal(m, b)
}
func (m *FindSuccessorRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSuccessorRequest.Marshal(b, m, deterministic)
}
func (m *FindSuccessorRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSuccessorRequest.Merge(m, src)
}
func (m *FindSuccessorRequest) XXX_Size() int {
	return xxx_messageInfo_FindSuccessorRequest.Size(m)
}
func (m *FindSuccessorRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSuccessorRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindSuccessorRequest proto.InternalMessageInfo

func (m *FindSuccessorRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type FindSuccessorResponse struct {
	Node                 *Node    `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindSuccessorResponse) Reset()         { *m = FindSuccessorResponse{} }
func (m *FindSuccessorResponse) String() string { return proto.CompactTextString(m) }
func (*FindSuccessorResponse) ProtoMessage()    {}
func (*FindSuccessorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{10}
}

func (m *FindSuccessorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindSuccessorResponse.Unmarshal(m, b)
}
func (m *FindSuccessorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindSuccessorResponse.Marshal(b, m, deterministic)
}
func (m *FindSuccessorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindSuccessorResponse.Merge(m, src)
}
func (m *FindSuccessorResponse) XXX_Size() int {
	return xxx_messageInfo_FindSuccessorResponse.Size(m)
}
func (m *FindSuccessorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindSuccessorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindSuccessorResponse proto.InternalMessageInfo

func (m *FindSuccessorResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

type GetNodeInfoRequest struct {
	IncludeFingerTable   bool     `protobuf:"varint,1,opt,name=includeFingerTable,proto3" json:"includeFingerTable,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNodeInfoRequest) Reset()         { *m = GetNodeInfoRequest{} }
func (m *GetNodeInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetNodeInfoRequest) ProtoMessage()    {}
func (*GetNodeInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{11}
}

func (m *GetNodeInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeInfoRequest.Unmarshal(m, b)
}
func (m *GetNodeInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetNodeInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeInfoRequest.Merge(m, src)
}
func (m *GetNodeInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetNodeInfoRequest.Size(m)
}
func (m *GetNodeInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeInfoRequest proto.InternalMessageInfo

func (m *GetNodeInfoRequest) GetIncludeFingerTable() bool {
	if m != nil {
		return m.IncludeFingerTable
	}
	return false
}

type GetNodeInfoResponse struct {
	Node                 *Node        `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Ft                   *FingerTable `protobuf:"bytes,2,opt,name=ft,proto3" json:"ft,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetNodeInfoResponse) Reset()         { *m = GetNodeInfoResponse{} }
func (m *GetNodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetNodeInfoResponse) ProtoMessage()    {}
func (*GetNodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{12}
}

func (m *GetNodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNodeInfoResponse.Unmarshal(m, b)
}
func (m *GetNodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNodeInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetNodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNodeInfoResponse.Merge(m, src)
}
func (m *GetNodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetNodeInfoResponse.Size(m)
}
func (m *GetNodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNodeInfoResponse proto.InternalMessageInfo

func (m *GetNodeInfoResponse) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *GetNodeInfoResponse) GetFt() *FingerTable {
	if m != nil {
		return m.Ft
	}
	return nil
}

type UpdateFingerTableRequest struct {
	Node                 *Node    `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	I                    int64    `protobuf:"varint,2,opt,name=i,proto3" json:"i,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFingerTableRequest) Reset()         { *m = UpdateFingerTableRequest{} }
func (m *UpdateFingerTableRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateFingerTableRequest) ProtoMessage()    {}
func (*UpdateFingerTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{13}
}

func (m *UpdateFingerTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFingerTableRequest.Unmarshal(m, b)
}
func (m *UpdateFingerTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFingerTableRequest.Marshal(b, m, deterministic)
}
func (m *UpdateFingerTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFingerTableRequest.Merge(m, src)
}
func (m *UpdateFingerTableRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateFingerTableRequest.Size(m)
}
func (m *UpdateFingerTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFingerTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFingerTableRequest proto.InternalMessageInfo

func (m *UpdateFingerTableRequest) GetNode() *Node {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *UpdateFingerTableRequest) GetI() int64 {
	if m != nil {
		return m.I
	}
	return 0
}

type UpdateFingerTableResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateFingerTableResponse) Reset()         { *m = UpdateFingerTableResponse{} }
func (m *UpdateFingerTableResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateFingerTableResponse) ProtoMessage()    {}
func (*UpdateFingerTableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d572f8aeec35237e, []int{14}
}

func (m *UpdateFingerTableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateFingerTableResponse.Unmarshal(m, b)
}
func (m *UpdateFingerTableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateFingerTableResponse.Marshal(b, m, deterministic)
}
func (m *UpdateFingerTableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateFingerTableResponse.Merge(m, src)
}
func (m *UpdateFingerTableResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateFingerTableResponse.Size(m)
}
func (m *UpdateFingerTableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateFingerTableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateFingerTableResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Node)(nil), "Node")
	proto.RegisterType((*FingerTableEntry)(nil), "FingerTableEntry")
	proto.RegisterType((*FingerTable)(nil), "FingerTable")
	proto.RegisterType((*ClosestPrecedingFingerRequest)(nil), "ClosestPrecedingFingerRequest")
	proto.RegisterType((*ClosestPrecedingFingerResponse)(nil), "ClosestPrecedingFingerResponse")
	proto.RegisterType((*JoinRingRequest)(nil), "JoinRingRequest")
	proto.RegisterType((*JoinRingResponse)(nil), "JoinRingResponse")
	proto.RegisterType((*FindPredecessorRequest)(nil), "FindPredecessorRequest")
	proto.RegisterType((*FindPredecessorResponse)(nil), "FindPredecessorResponse")
	proto.RegisterType((*FindSuccessorRequest)(nil), "FindSuccessorRequest")
	proto.RegisterType((*FindSuccessorResponse)(nil), "FindSuccessorResponse")
	proto.RegisterType((*GetNodeInfoRequest)(nil), "GetNodeInfoRequest")
	proto.RegisterType((*GetNodeInfoResponse)(nil), "GetNodeInfoResponse")
	proto.RegisterType((*UpdateFingerTableRequest)(nil), "UpdateFingerTableRequest")
	proto.RegisterType((*UpdateFingerTableResponse)(nil), "UpdateFingerTableResponse")
}

func init() {
	proto.RegisterFile("chordio.proto", fileDescriptor_d572f8aeec35237e)
}

var fileDescriptor_d572f8aeec35237e = []byte{
	// 527 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xd1, 0x6f, 0xd3, 0x3e,
	0x10, 0x4e, 0xd2, 0x74, 0xbf, 0xfd, 0xae, 0x1b, 0x6b, 0x6f, 0x5d, 0x97, 0x06, 0x18, 0x95, 0x25,
	0x50, 0x25, 0x24, 0x23, 0x0a, 0x0f, 0x68, 0xbc, 0x20, 0x3a, 0x8a, 0x86, 0xd0, 0x34, 0x19, 0x78,
	0x81, 0x17, 0xda, 0xd8, 0x2d, 0x96, 0x2a, 0xbb, 0x38, 0xee, 0x03, 0x7f, 0x13, 0xff, 0x24, 0x72,
	0xda, 0x6a, 0x69, 0x9a, 0x74, 0x6f, 0xb1, 0xef, 0xee, 0xfb, 0xbe, 0xf3, 0x7d, 0x17, 0x38, 0x4e,
	0x7e, 0x69, 0xc3, 0xa5, 0xa6, 0x0b, 0xa3, 0xad, 0x26, 0x3f, 0x21, 0xbc, 0xd1, 0x5c, 0xe0, 0x03,
	0x08, 0x24, 0x8f, 0xfc, 0x9e, 0xdf, 0x0f, 0x59, 0x20, 0x39, 0x22, 0x84, 0x13, 0xa9, 0x78, 0x14,
	0xf4, 0xfc, 0xfe, 0xff, 0x2c, 0xfb, 0xc6, 0x2e, 0x84, 0x0b, 0x23, 0x78, 0x54, 0xeb, 0xf9, 0xfd,
	0xc6, 0xa0, 0x4e, 0x5d, 0x21, 0xcb, 0xae, 0x5c, 0x28, 0x5d, 0x26, 0x49, 0x14, 0x6e, 0x85, 0xdc,
	0x15, 0x61, 0xd0, 0x1c, 0x49, 0x35, 0x13, 0xe6, 0xeb, 0x78, 0x32, 0x17, 0x1f, 0x94, 0x35, 0x7f,
	0xb0, 0x0d, 0xf5, 0xd4, 0x8e, 0x8d, 0x5d, 0x13, 0xae, 0x0e, 0xd8, 0x84, 0x9a, 0x58, 0x53, 0x86,
	0xcc, 0x7d, 0x62, 0x07, 0x0e, 0x94, 0xe6, 0xe2, 0xfa, 0x2a, 0xe3, 0x0c, 0xd9, 0xfa, 0x44, 0x2e,
	0xa1, 0x91, 0xc3, 0xc4, 0xe7, 0xf0, 0x9f, 0x50, 0xd6, 0x48, 0x91, 0x46, 0x7e, 0xaf, 0xd6, 0x6f,
	0x0c, 0x5a, 0xb4, 0x48, 0xc9, 0x36, 0x19, 0xe4, 0x05, 0x3c, 0x1e, 0xce, 0x75, 0x2a, 0x52, 0x7b,
	0x6b, 0x44, 0x22, 0xb8, 0x54, 0xb3, 0x55, 0x32, 0x13, 0xbf, 0x97, 0x22, 0xb5, 0xc5, 0xa7, 0x20,
	0x6f, 0xe1, 0xa2, 0xaa, 0x20, 0x5d, 0x68, 0x95, 0x0a, 0xd7, 0xbd, 0x13, 0x96, 0xd5, 0xdc, 0x75,
	0xef, 0xae, 0xc8, 0x1b, 0x38, 0xf9, 0xa4, 0xa5, 0x62, 0x52, 0xcd, 0x36, 0xf8, 0x4f, 0x01, 0xa4,
	0xb2, 0x46, 0xf3, 0x65, 0x22, 0xcc, 0x76, 0x4d, 0x2e, 0x40, 0x10, 0x9a, 0x77, 0x95, 0x2b, 0x22,
	0xd2, 0x87, 0xce, 0x48, 0x2a, 0x7e, 0x6b, 0x04, 0x17, 0x89, 0x48, 0x53, 0x5d, 0x29, 0xfa, 0x35,
	0x9c, 0xef, 0x64, 0xde, 0xaf, 0xf6, 0x19, 0xb4, 0x5d, 0xd5, 0x97, 0x65, 0xb2, 0x1f, 0x7d, 0x00,
	0x67, 0x85, 0xbc, 0x02, 0x76, 0xb0, 0x8b, 0x7d, 0x05, 0xf8, 0x51, 0x58, 0x77, 0x71, 0xad, 0xa6,
	0x7a, 0x83, 0x4c, 0x01, 0xa5, 0x4a, 0xe6, 0x4b, 0x2e, 0x72, 0x13, 0xcb, 0x98, 0x0e, 0x59, 0x49,
	0x84, 0xdc, 0xc0, 0xe9, 0x16, 0xca, 0xbd, 0x3d, 0xe1, 0x23, 0x08, 0xa6, 0x76, 0x2d, 0xe8, 0x28,
	0xef, 0x0b, 0x16, 0x4c, 0x2d, 0x19, 0x42, 0xf4, 0x6d, 0xc1, 0xc7, 0x36, 0x4f, 0xb2, 0xd1, 0xb6,
	0x07, 0xf4, 0x08, 0x7c, 0x99, 0x61, 0xd6, 0x98, 0x2f, 0xc9, 0x43, 0xe8, 0x96, 0x80, 0xac, 0xa4,
	0x0d, 0xfe, 0xd6, 0xa0, 0x3e, 0x74, 0x3b, 0x87, 0x97, 0xd0, 0xc8, 0x69, 0xc7, 0x53, 0xba, 0xfb,
	0x1e, 0x71, 0x9b, 0x96, 0xb4, 0x47, 0x3c, 0x7c, 0x09, 0x87, 0x1b, 0x37, 0x60, 0x93, 0x16, 0x2c,
	0x15, 0xb7, 0xe8, 0x8e, 0x55, 0x3c, 0x1c, 0xc1, 0x49, 0xc1, 0x02, 0x78, 0x4e, 0xcb, 0xed, 0x13,
	0x47, 0xb4, 0xc2, 0x2d, 0xc4, 0xc3, 0x77, 0x70, 0xbc, 0x35, 0x6c, 0x3c, 0xa3, 0x65, 0x26, 0x89,
	0x3b, 0xb4, 0xd4, 0x13, 0xc4, 0xc3, 0x1f, 0xd0, 0x29, 0xdf, 0x20, 0xbc, 0xa0, 0x7b, 0x77, 0x31,
	0x7e, 0x42, 0xf7, 0xaf, 0x1e, 0xf1, 0xf0, 0x33, 0xb4, 0x76, 0x1e, 0x1f, 0xbb, 0xb4, 0x6a, 0xaa,
	0x71, 0x4c, 0x2b, 0x67, 0x45, 0xbc, 0xf7, 0xe1, 0xf7, 0x60, 0x31, 0x99, 0x1c, 0x64, 0x3f, 0xc7,
	0x57, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x2c, 0xa3, 0xe1, 0x2d, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChordClient is the client API for Chord service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChordClient interface {
	GetNodeInfo(ctx context.Context, in *GetNodeInfoRequest, opts ...grpc.CallOption) (*GetNodeInfoResponse, error)
	JoinRing(ctx context.Context, in *JoinRingRequest, opts ...grpc.CallOption) (*JoinRingResponse, error)
	FindPredecessor(ctx context.Context, in *FindPredecessorRequest, opts ...grpc.CallOption) (*FindPredecessorResponse, error)
	FindSuccessor(ctx context.Context, in *FindSuccessorRequest, opts ...grpc.CallOption) (*FindSuccessorResponse, error)
	ClosestPrecedingFinger(ctx context.Context, in *ClosestPrecedingFingerRequest, opts ...grpc.CallOption) (*ClosestPrecedingFingerResponse, error)
	UpdateFingerTable(ctx context.Context, in *UpdateFingerTableRequest, opts ...grpc.CallOption) (*UpdateFingerTableResponse, error)
}

type chordClient struct {
	cc grpc.ClientConnInterface
}

func NewChordClient(cc grpc.ClientConnInterface) ChordClient {
	return &chordClient{cc}
}

func (c *chordClient) GetNodeInfo(ctx context.Context, in *GetNodeInfoRequest, opts ...grpc.CallOption) (*GetNodeInfoResponse, error) {
	out := new(GetNodeInfoResponse)
	err := c.cc.Invoke(ctx, "/Chord/GetNodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) JoinRing(ctx context.Context, in *JoinRingRequest, opts ...grpc.CallOption) (*JoinRingResponse, error) {
	out := new(JoinRingResponse)
	err := c.cc.Invoke(ctx, "/Chord/JoinRing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) FindPredecessor(ctx context.Context, in *FindPredecessorRequest, opts ...grpc.CallOption) (*FindPredecessorResponse, error) {
	out := new(FindPredecessorResponse)
	err := c.cc.Invoke(ctx, "/Chord/FindPredecessor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) FindSuccessor(ctx context.Context, in *FindSuccessorRequest, opts ...grpc.CallOption) (*FindSuccessorResponse, error) {
	out := new(FindSuccessorResponse)
	err := c.cc.Invoke(ctx, "/Chord/FindSuccessor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) ClosestPrecedingFinger(ctx context.Context, in *ClosestPrecedingFingerRequest, opts ...grpc.CallOption) (*ClosestPrecedingFingerResponse, error) {
	out := new(ClosestPrecedingFingerResponse)
	err := c.cc.Invoke(ctx, "/Chord/ClosestPrecedingFinger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) UpdateFingerTable(ctx context.Context, in *UpdateFingerTableRequest, opts ...grpc.CallOption) (*UpdateFingerTableResponse, error) {
	out := new(UpdateFingerTableResponse)
	err := c.cc.Invoke(ctx, "/Chord/UpdateFingerTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChordServer is the server API for Chord service.
type ChordServer interface {
	GetNodeInfo(context.Context, *GetNodeInfoRequest) (*GetNodeInfoResponse, error)
	JoinRing(context.Context, *JoinRingRequest) (*JoinRingResponse, error)
	FindPredecessor(context.Context, *FindPredecessorRequest) (*FindPredecessorResponse, error)
	FindSuccessor(context.Context, *FindSuccessorRequest) (*FindSuccessorResponse, error)
	ClosestPrecedingFinger(context.Context, *ClosestPrecedingFingerRequest) (*ClosestPrecedingFingerResponse, error)
	UpdateFingerTable(context.Context, *UpdateFingerTableRequest) (*UpdateFingerTableResponse, error)
}

// UnimplementedChordServer can be embedded to have forward compatible implementations.
type UnimplementedChordServer struct {
}

func (*UnimplementedChordServer) GetNodeInfo(ctx context.Context, req *GetNodeInfoRequest) (*GetNodeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeInfo not implemented")
}
func (*UnimplementedChordServer) JoinRing(ctx context.Context, req *JoinRingRequest) (*JoinRingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRing not implemented")
}
func (*UnimplementedChordServer) FindPredecessor(ctx context.Context, req *FindPredecessorRequest) (*FindPredecessorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPredecessor not implemented")
}
func (*UnimplementedChordServer) FindSuccessor(ctx context.Context, req *FindSuccessorRequest) (*FindSuccessorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindSuccessor not implemented")
}
func (*UnimplementedChordServer) ClosestPrecedingFinger(ctx context.Context, req *ClosestPrecedingFingerRequest) (*ClosestPrecedingFingerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClosestPrecedingFinger not implemented")
}
func (*UnimplementedChordServer) UpdateFingerTable(ctx context.Context, req *UpdateFingerTableRequest) (*UpdateFingerTableResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateFingerTable not implemented")
}

func RegisterChordServer(s *grpc.Server, srv ChordServer) {
	s.RegisterService(&_Chord_serviceDesc, srv)
}

func _Chord_GetNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).GetNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/GetNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).GetNodeInfo(ctx, req.(*GetNodeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_JoinRing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).JoinRing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/JoinRing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).JoinRing(ctx, req.(*JoinRingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_FindPredecessor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindPredecessorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).FindPredecessor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/FindPredecessor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).FindPredecessor(ctx, req.(*FindPredecessorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_FindSuccessor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSuccessorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).FindSuccessor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/FindSuccessor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).FindSuccessor(ctx, req.(*FindSuccessorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_ClosestPrecedingFinger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClosestPrecedingFingerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).ClosestPrecedingFinger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/ClosestPrecedingFinger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).ClosestPrecedingFinger(ctx, req.(*ClosestPrecedingFingerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_UpdateFingerTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateFingerTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).UpdateFingerTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/UpdateFingerTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).UpdateFingerTable(ctx, req.(*UpdateFingerTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chord_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Chord",
	HandlerType: (*ChordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNodeInfo",
			Handler:    _Chord_GetNodeInfo_Handler,
		},
		{
			MethodName: "JoinRing",
			Handler:    _Chord_JoinRing_Handler,
		},
		{
			MethodName: "FindPredecessor",
			Handler:    _Chord_FindPredecessor_Handler,
		},
		{
			MethodName: "FindSuccessor",
			Handler:    _Chord_FindSuccessor_Handler,
		},
		{
			MethodName: "ClosestPrecedingFinger",
			Handler:    _Chord_ClosestPrecedingFinger_Handler,
		},
		{
			MethodName: "UpdateFingerTable",
			Handler:    _Chord_UpdateFingerTable_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chordio.proto",
}
