// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.1
// source: chordio.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Bind string `protobuf:"bytes,2,opt,name=bind,proto3" json:"bind,omitempty"`
	Pred *Node  `protobuf:"bytes,3,opt,name=pred,proto3" json:"pred,omitempty"`
	Succ *Node  `protobuf:"bytes,4,opt,name=succ,proto3" json:"succ,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Node) GetBind() string {
	if x != nil {
		return x.Bind
	}
	return ""
}

func (x *Node) GetPred() *Node {
	if x != nil {
		return x.Pred
	}
	return nil
}

func (x *Node) GetSucc() *Node {
	if x != nil {
		return x.Succ
	}
	return nil
}

type FingerTableEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start  uint64 `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End    uint64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	NodeID uint64 `protobuf:"varint,3,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
}

func (x *FingerTableEntry) Reset() {
	*x = FingerTableEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FingerTableEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FingerTableEntry) ProtoMessage() {}

func (x *FingerTableEntry) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FingerTableEntry.ProtoReflect.Descriptor instead.
func (*FingerTableEntry) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{1}
}

func (x *FingerTableEntry) GetStart() uint64 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *FingerTableEntry) GetEnd() uint64 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *FingerTableEntry) GetNodeID() uint64 {
	if x != nil {
		return x.NodeID
	}
	return 0
}

type FingerTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entries []*FingerTableEntry `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *FingerTable) Reset() {
	*x = FingerTable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FingerTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FingerTable) ProtoMessage() {}

func (x *FingerTable) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FingerTable.ProtoReflect.Descriptor instead.
func (*FingerTable) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{2}
}

func (x *FingerTable) GetEntries() []*FingerTableEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ClosestPrecedingFingerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ClosestPrecedingFingerRequest) Reset() {
	*x = ClosestPrecedingFingerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosestPrecedingFingerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosestPrecedingFingerRequest) ProtoMessage() {}

func (x *ClosestPrecedingFingerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosestPrecedingFingerRequest.ProtoReflect.Descriptor instead.
func (*ClosestPrecedingFingerRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{3}
}

func (x *ClosestPrecedingFingerRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ClosestPrecedingFingerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *ClosestPrecedingFingerResponse) Reset() {
	*x = ClosestPrecedingFingerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClosestPrecedingFingerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClosestPrecedingFingerResponse) ProtoMessage() {}

func (x *ClosestPrecedingFingerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClosestPrecedingFingerResponse.ProtoReflect.Descriptor instead.
func (*ClosestPrecedingFingerResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{4}
}

func (x *ClosestPrecedingFingerResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type JoinRingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Introducer *Node `protobuf:"bytes,1,opt,name=introducer,proto3" json:"introducer,omitempty"`
}

func (x *JoinRingRequest) Reset() {
	*x = JoinRingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRingRequest) ProtoMessage() {}

func (x *JoinRingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRingRequest.ProtoReflect.Descriptor instead.
func (*JoinRingRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{5}
}

func (x *JoinRingRequest) GetIntroducer() *Node {
	if x != nil {
		return x.Introducer
	}
	return nil
}

type JoinRingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *JoinRingResponse) Reset() {
	*x = JoinRingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinRingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRingResponse) ProtoMessage() {}

func (x *JoinRingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRingResponse.ProtoReflect.Descriptor instead.
func (*JoinRingResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{6}
}

type FindPredecessorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindPredecessorRequest) Reset() {
	*x = FindPredecessorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPredecessorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPredecessorRequest) ProtoMessage() {}

func (x *FindPredecessorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPredecessorRequest.ProtoReflect.Descriptor instead.
func (*FindPredecessorRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{7}
}

func (x *FindPredecessorRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindPredecessorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *FindPredecessorResponse) Reset() {
	*x = FindPredecessorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPredecessorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPredecessorResponse) ProtoMessage() {}

func (x *FindPredecessorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPredecessorResponse.ProtoReflect.Descriptor instead.
func (*FindPredecessorResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{8}
}

func (x *FindPredecessorResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type FindSuccessorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindSuccessorRequest) Reset() {
	*x = FindSuccessorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSuccessorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSuccessorRequest) ProtoMessage() {}

func (x *FindSuccessorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSuccessorRequest.ProtoReflect.Descriptor instead.
func (*FindSuccessorRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{9}
}

func (x *FindSuccessorRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FindSuccessorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *FindSuccessorResponse) Reset() {
	*x = FindSuccessorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindSuccessorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindSuccessorResponse) ProtoMessage() {}

func (x *FindSuccessorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindSuccessorResponse.ProtoReflect.Descriptor instead.
func (*FindSuccessorResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{10}
}

func (x *FindSuccessorResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type GetNodeInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncludeFingerTable bool `protobuf:"varint,1,opt,name=includeFingerTable,proto3" json:"includeFingerTable,omitempty"`
}

func (x *GetNodeInfoRequest) Reset() {
	*x = GetNodeInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeInfoRequest) ProtoMessage() {}

func (x *GetNodeInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeInfoRequest.ProtoReflect.Descriptor instead.
func (*GetNodeInfoRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{11}
}

func (x *GetNodeInfoRequest) GetIncludeFingerTable() bool {
	if x != nil {
		return x.IncludeFingerTable
	}
	return false
}

type GetNodeInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node        `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Ft   *FingerTable `protobuf:"bytes,2,opt,name=ft,proto3" json:"ft,omitempty"`
}

func (x *GetNodeInfoResponse) Reset() {
	*x = GetNodeInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeInfoResponse) ProtoMessage() {}

func (x *GetNodeInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeInfoResponse.ProtoReflect.Descriptor instead.
func (*GetNodeInfoResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{12}
}

func (x *GetNodeInfoResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *GetNodeInfoResponse) GetFt() *FingerTable {
	if x != nil {
		return x.Ft
	}
	return nil
}

type UpdateFingerTableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	I    int64 `protobuf:"varint,2,opt,name=i,proto3" json:"i,omitempty"`
}

func (x *UpdateFingerTableRequest) Reset() {
	*x = UpdateFingerTableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFingerTableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFingerTableRequest) ProtoMessage() {}

func (x *UpdateFingerTableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFingerTableRequest.ProtoReflect.Descriptor instead.
func (*UpdateFingerTableRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateFingerTableRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *UpdateFingerTableRequest) GetI() int64 {
	if x != nil {
		return x.I
	}
	return 0
}

type UpdateFingerTableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateFingerTableResponse) Reset() {
	*x = UpdateFingerTableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateFingerTableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateFingerTableResponse) ProtoMessage() {}

func (x *UpdateFingerTableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateFingerTableResponse.ProtoReflect.Descriptor instead.
func (*UpdateFingerTableResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{14}
}

type SetPredecessorNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *SetPredecessorNodeRequest) Reset() {
	*x = SetPredecessorNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPredecessorNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPredecessorNodeRequest) ProtoMessage() {}

func (x *SetPredecessorNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPredecessorNodeRequest.ProtoReflect.Descriptor instead.
func (*SetPredecessorNodeRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{15}
}

func (x *SetPredecessorNodeRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type SetPredecessorNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetPredecessorNodeResponse) Reset() {
	*x = SetPredecessorNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPredecessorNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPredecessorNodeResponse) ProtoMessage() {}

func (x *SetPredecessorNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPredecessorNodeResponse.ProtoReflect.Descriptor instead.
func (*SetPredecessorNodeResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{16}
}

type SetSuccessorNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *SetSuccessorNodeRequest) Reset() {
	*x = SetSuccessorNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSuccessorNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSuccessorNodeRequest) ProtoMessage() {}

func (x *SetSuccessorNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSuccessorNodeRequest.ProtoReflect.Descriptor instead.
func (*SetSuccessorNodeRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{17}
}

func (x *SetSuccessorNodeRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type SetSuccessorNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSuccessorNodeResponse) Reset() {
	*x = SetSuccessorNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSuccessorNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSuccessorNodeResponse) ProtoMessage() {}

func (x *SetSuccessorNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSuccessorNodeResponse.ProtoReflect.Descriptor instead.
func (*SetSuccessorNodeResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{18}
}

type NotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *NotifyRequest) Reset() {
	*x = NotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRequest) ProtoMessage() {}

func (x *NotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRequest.ProtoReflect.Descriptor instead.
func (*NotifyRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{19}
}

func (x *NotifyRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type NotifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NotifyResponse) Reset() {
	*x = NotifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyResponse) ProtoMessage() {}

func (x *NotifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyResponse.ProtoReflect.Descriptor instead.
func (*NotifyResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{20}
}

type StabilizeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StabilizeRequest) Reset() {
	*x = StabilizeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StabilizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StabilizeRequest) ProtoMessage() {}

func (x *StabilizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StabilizeRequest.ProtoReflect.Descriptor instead.
func (*StabilizeRequest) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{21}
}

type StabilizeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumFingerTableEntryChanges int32 `protobuf:"varint,1,opt,name=numFingerTableEntryChanges,proto3" json:"numFingerTableEntryChanges,omitempty"`
}

func (x *StabilizeResponse) Reset() {
	*x = StabilizeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chordio_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StabilizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StabilizeResponse) ProtoMessage() {}

func (x *StabilizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chordio_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StabilizeResponse.ProtoReflect.Descriptor instead.
func (*StabilizeResponse) Descriptor() ([]byte, []int) {
	return file_chordio_proto_rawDescGZIP(), []int{22}
}

func (x *StabilizeResponse) GetNumFingerTableEntryChanges() int32 {
	if x != nil {
		return x.NumFingerTableEntryChanges
	}
	return 0
}

var File_chordio_proto protoreflect.FileDescriptor

var file_chordio_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x68, 0x6f, 0x72, 0x64, 0x69, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x60, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x69, 0x6e, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x70,
	0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x70, 0x72, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x73, 0x75, 0x63, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x73, 0x75, 0x63,
	0x63, 0x22, 0x52, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65,
	0x73, 0x22, 0x2f, 0x0a, 0x1d, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x63,
	0x65, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x3b, 0x0a, 0x1e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65,
	0x63, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22,
	0x38, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x25, 0x0a, 0x0a, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0a, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x22, 0x12, 0x0a, 0x10, 0x4a, 0x6f, 0x69,
	0x6e, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a,
	0x16, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x17, 0x46, 0x69, 0x6e, 0x64, 0x50,
	0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x26, 0x0a,
	0x14, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x32, 0x0a, 0x15, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x44, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2e, 0x0a, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22,
	0x4e, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x12, 0x1c, 0x0a, 0x02, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x02, 0x66, 0x74, 0x22,
	0x43, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x01, 0x69, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x46, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x36, 0x0a, 0x19, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x1c, 0x0a, 0x1a, 0x53, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x1a, 0x0a,
	0x18, 0x53, 0x65, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x0a, 0x0d, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x6e, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x10, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x12, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53, 0x0a, 0x11, 0x53,
	0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x1a, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x6e, 0x75, 0x6d, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x32, 0xde, 0x04, 0x0a, 0x05, 0x43, 0x68, 0x6f, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69,
	0x6e, 0x67, 0x12, 0x10, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x46, 0x69, 0x6e,
	0x64, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x12, 0x17, 0x2e, 0x46,
	0x69, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x64,
	0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x12, 0x15, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x16, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x50, 0x72,
	0x65, 0x63, 0x65, 0x64, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x12, 0x1e, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x73, 0x74, 0x50, 0x72, 0x65, 0x63, 0x65, 0x64, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73, 0x73,
	0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64,
	0x65, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x64, 0x65, 0x63, 0x65, 0x73,
	0x73, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x49, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f,
	0x72, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x6f, 0x72, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x19, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x6f, 0x72, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2b, 0x0a, 0x06,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x0e, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x36, 0x0a, 0x0b, 0x5f, 0x5f, 0x53,
	0x74, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x11, 0x2e, 0x53, 0x74, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x53, 0x74,
	0x61, 0x62, 0x69, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x04, 0x5a, 0x02, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chordio_proto_rawDescOnce sync.Once
	file_chordio_proto_rawDescData = file_chordio_proto_rawDesc
)

func file_chordio_proto_rawDescGZIP() []byte {
	file_chordio_proto_rawDescOnce.Do(func() {
		file_chordio_proto_rawDescData = protoimpl.X.CompressGZIP(file_chordio_proto_rawDescData)
	})
	return file_chordio_proto_rawDescData
}

var file_chordio_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_chordio_proto_goTypes = []interface{}{
	(*Node)(nil),                           // 0: Node
	(*FingerTableEntry)(nil),               // 1: FingerTableEntry
	(*FingerTable)(nil),                    // 2: FingerTable
	(*ClosestPrecedingFingerRequest)(nil),  // 3: ClosestPrecedingFingerRequest
	(*ClosestPrecedingFingerResponse)(nil), // 4: ClosestPrecedingFingerResponse
	(*JoinRingRequest)(nil),                // 5: JoinRingRequest
	(*JoinRingResponse)(nil),               // 6: JoinRingResponse
	(*FindPredecessorRequest)(nil),         // 7: FindPredecessorRequest
	(*FindPredecessorResponse)(nil),        // 8: FindPredecessorResponse
	(*FindSuccessorRequest)(nil),           // 9: FindSuccessorRequest
	(*FindSuccessorResponse)(nil),          // 10: FindSuccessorResponse
	(*GetNodeInfoRequest)(nil),             // 11: GetNodeInfoRequest
	(*GetNodeInfoResponse)(nil),            // 12: GetNodeInfoResponse
	(*UpdateFingerTableRequest)(nil),       // 13: UpdateFingerTableRequest
	(*UpdateFingerTableResponse)(nil),      // 14: UpdateFingerTableResponse
	(*SetPredecessorNodeRequest)(nil),      // 15: SetPredecessorNodeRequest
	(*SetPredecessorNodeResponse)(nil),     // 16: SetPredecessorNodeResponse
	(*SetSuccessorNodeRequest)(nil),        // 17: SetSuccessorNodeRequest
	(*SetSuccessorNodeResponse)(nil),       // 18: SetSuccessorNodeResponse
	(*NotifyRequest)(nil),                  // 19: NotifyRequest
	(*NotifyResponse)(nil),                 // 20: NotifyResponse
	(*StabilizeRequest)(nil),               // 21: StabilizeRequest
	(*StabilizeResponse)(nil),              // 22: StabilizeResponse
}
var file_chordio_proto_depIdxs = []int32{
	0,  // 0: Node.pred:type_name -> Node
	0,  // 1: Node.succ:type_name -> Node
	1,  // 2: FingerTable.entries:type_name -> FingerTableEntry
	0,  // 3: ClosestPrecedingFingerResponse.node:type_name -> Node
	0,  // 4: JoinRingRequest.introducer:type_name -> Node
	0,  // 5: FindPredecessorResponse.node:type_name -> Node
	0,  // 6: FindSuccessorResponse.node:type_name -> Node
	0,  // 7: GetNodeInfoResponse.node:type_name -> Node
	2,  // 8: GetNodeInfoResponse.ft:type_name -> FingerTable
	0,  // 9: UpdateFingerTableRequest.node:type_name -> Node
	0,  // 10: SetPredecessorNodeRequest.node:type_name -> Node
	0,  // 11: SetSuccessorNodeRequest.node:type_name -> Node
	0,  // 12: NotifyRequest.node:type_name -> Node
	11, // 13: Chord.GetNodeInfo:input_type -> GetNodeInfoRequest
	5,  // 14: Chord.JoinRing:input_type -> JoinRingRequest
	7,  // 15: Chord.FindPredecessor:input_type -> FindPredecessorRequest
	9,  // 16: Chord.FindSuccessor:input_type -> FindSuccessorRequest
	3,  // 17: Chord.ClosestPrecedingFinger:input_type -> ClosestPrecedingFingerRequest
	15, // 18: Chord.SetPredecessorNode:input_type -> SetPredecessorNodeRequest
	17, // 19: Chord.SetSuccessorNode:input_type -> SetSuccessorNodeRequest
	19, // 20: Chord.Notify:input_type -> NotifyRequest
	21, // 21: Chord.__Stabilize:input_type -> StabilizeRequest
	12, // 22: Chord.GetNodeInfo:output_type -> GetNodeInfoResponse
	6,  // 23: Chord.JoinRing:output_type -> JoinRingResponse
	8,  // 24: Chord.FindPredecessor:output_type -> FindPredecessorResponse
	10, // 25: Chord.FindSuccessor:output_type -> FindSuccessorResponse
	4,  // 26: Chord.ClosestPrecedingFinger:output_type -> ClosestPrecedingFingerResponse
	16, // 27: Chord.SetPredecessorNode:output_type -> SetPredecessorNodeResponse
	18, // 28: Chord.SetSuccessorNode:output_type -> SetSuccessorNodeResponse
	20, // 29: Chord.Notify:output_type -> NotifyResponse
	22, // 30: Chord.__Stabilize:output_type -> StabilizeResponse
	22, // [22:31] is the sub-list for method output_type
	13, // [13:22] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_chordio_proto_init() }
func file_chordio_proto_init() {
	if File_chordio_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_chordio_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FingerTableEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FingerTable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosestPrecedingFingerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClosestPrecedingFingerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinRingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPredecessorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPredecessorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSuccessorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindSuccessorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFingerTableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateFingerTableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPredecessorNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPredecessorNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSuccessorNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSuccessorNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StabilizeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chordio_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StabilizeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chordio_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chordio_proto_goTypes,
		DependencyIndexes: file_chordio_proto_depIdxs,
		MessageInfos:      file_chordio_proto_msgTypes,
	}.Build()
	File_chordio_proto = out.File
	file_chordio_proto_rawDesc = nil
	file_chordio_proto_goTypes = nil
	file_chordio_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ChordClient is the client API for Chord service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ChordClient interface {
	GetNodeInfo(ctx context.Context, in *GetNodeInfoRequest, opts ...grpc.CallOption) (*GetNodeInfoResponse, error)
	JoinRing(ctx context.Context, in *JoinRingRequest, opts ...grpc.CallOption) (*JoinRingResponse, error)
	FindPredecessor(ctx context.Context, in *FindPredecessorRequest, opts ...grpc.CallOption) (*FindPredecessorResponse, error)
	FindSuccessor(ctx context.Context, in *FindSuccessorRequest, opts ...grpc.CallOption) (*FindSuccessorResponse, error)
	ClosestPrecedingFinger(ctx context.Context, in *ClosestPrecedingFingerRequest, opts ...grpc.CallOption) (*ClosestPrecedingFingerResponse, error)
	SetPredecessorNode(ctx context.Context, in *SetPredecessorNodeRequest, opts ...grpc.CallOption) (*SetPredecessorNodeResponse, error)
	SetSuccessorNode(ctx context.Context, in *SetSuccessorNodeRequest, opts ...grpc.CallOption) (*SetSuccessorNodeResponse, error)
	Notify(ctx context.Context, in *NotifyRequest, opts ...grpc.CallOption) (*NotifyResponse, error)
	X_Stabilize(ctx context.Context, in *StabilizeRequest, opts ...grpc.CallOption) (*StabilizeResponse, error)
}

type chordClient struct {
	cc grpc.ClientConnInterface
}

func NewChordClient(cc grpc.ClientConnInterface) ChordClient {
	return &chordClient{cc}
}

func (c *chordClient) GetNodeInfo(ctx context.Context, in *GetNodeInfoRequest, opts ...grpc.CallOption) (*GetNodeInfoResponse, error) {
	out := new(GetNodeInfoResponse)
	err := c.cc.Invoke(ctx, "/Chord/GetNodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) JoinRing(ctx context.Context, in *JoinRingRequest, opts ...grpc.CallOption) (*JoinRingResponse, error) {
	out := new(JoinRingResponse)
	err := c.cc.Invoke(ctx, "/Chord/JoinRing", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) FindPredecessor(ctx context.Context, in *FindPredecessorRequest, opts ...grpc.CallOption) (*FindPredecessorResponse, error) {
	out := new(FindPredecessorResponse)
	err := c.cc.Invoke(ctx, "/Chord/FindPredecessor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) FindSuccessor(ctx context.Context, in *FindSuccessorRequest, opts ...grpc.CallOption) (*FindSuccessorResponse, error) {
	out := new(FindSuccessorResponse)
	err := c.cc.Invoke(ctx, "/Chord/FindSuccessor", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) ClosestPrecedingFinger(ctx context.Context, in *ClosestPrecedingFingerRequest, opts ...grpc.CallOption) (*ClosestPrecedingFingerResponse, error) {
	out := new(ClosestPrecedingFingerResponse)
	err := c.cc.Invoke(ctx, "/Chord/ClosestPrecedingFinger", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) SetPredecessorNode(ctx context.Context, in *SetPredecessorNodeRequest, opts ...grpc.CallOption) (*SetPredecessorNodeResponse, error) {
	out := new(SetPredecessorNodeResponse)
	err := c.cc.Invoke(ctx, "/Chord/SetPredecessorNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) SetSuccessorNode(ctx context.Context, in *SetSuccessorNodeRequest, opts ...grpc.CallOption) (*SetSuccessorNodeResponse, error) {
	out := new(SetSuccessorNodeResponse)
	err := c.cc.Invoke(ctx, "/Chord/SetSuccessorNode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) Notify(ctx context.Context, in *NotifyRequest, opts ...grpc.CallOption) (*NotifyResponse, error) {
	out := new(NotifyResponse)
	err := c.cc.Invoke(ctx, "/Chord/Notify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chordClient) X_Stabilize(ctx context.Context, in *StabilizeRequest, opts ...grpc.CallOption) (*StabilizeResponse, error) {
	out := new(StabilizeResponse)
	err := c.cc.Invoke(ctx, "/Chord/__Stabilize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ChordServer is the server API for Chord service.
type ChordServer interface {
	GetNodeInfo(context.Context, *GetNodeInfoRequest) (*GetNodeInfoResponse, error)
	JoinRing(context.Context, *JoinRingRequest) (*JoinRingResponse, error)
	FindPredecessor(context.Context, *FindPredecessorRequest) (*FindPredecessorResponse, error)
	FindSuccessor(context.Context, *FindSuccessorRequest) (*FindSuccessorResponse, error)
	ClosestPrecedingFinger(context.Context, *ClosestPrecedingFingerRequest) (*ClosestPrecedingFingerResponse, error)
	SetPredecessorNode(context.Context, *SetPredecessorNodeRequest) (*SetPredecessorNodeResponse, error)
	SetSuccessorNode(context.Context, *SetSuccessorNodeRequest) (*SetSuccessorNodeResponse, error)
	Notify(context.Context, *NotifyRequest) (*NotifyResponse, error)
	X_Stabilize(context.Context, *StabilizeRequest) (*StabilizeResponse, error)
}

// UnimplementedChordServer can be embedded to have forward compatible implementations.
type UnimplementedChordServer struct {
}

func (*UnimplementedChordServer) GetNodeInfo(context.Context, *GetNodeInfoRequest) (*GetNodeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeInfo not implemented")
}
func (*UnimplementedChordServer) JoinRing(context.Context, *JoinRingRequest) (*JoinRingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method JoinRing not implemented")
}
func (*UnimplementedChordServer) FindPredecessor(context.Context, *FindPredecessorRequest) (*FindPredecessorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindPredecessor not implemented")
}
func (*UnimplementedChordServer) FindSuccessor(context.Context, *FindSuccessorRequest) (*FindSuccessorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindSuccessor not implemented")
}
func (*UnimplementedChordServer) ClosestPrecedingFinger(context.Context, *ClosestPrecedingFingerRequest) (*ClosestPrecedingFingerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClosestPrecedingFinger not implemented")
}
func (*UnimplementedChordServer) SetPredecessorNode(context.Context, *SetPredecessorNodeRequest) (*SetPredecessorNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPredecessorNode not implemented")
}
func (*UnimplementedChordServer) SetSuccessorNode(context.Context, *SetSuccessorNodeRequest) (*SetSuccessorNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetSuccessorNode not implemented")
}
func (*UnimplementedChordServer) Notify(context.Context, *NotifyRequest) (*NotifyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Notify not implemented")
}
func (*UnimplementedChordServer) X_Stabilize(context.Context, *StabilizeRequest) (*StabilizeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method X_Stabilize not implemented")
}

func RegisterChordServer(s *grpc.Server, srv ChordServer) {
	s.RegisterService(&_Chord_serviceDesc, srv)
}

func _Chord_GetNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNodeInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).GetNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/GetNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).GetNodeInfo(ctx, req.(*GetNodeInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_JoinRing_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JoinRingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).JoinRing(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/JoinRing",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).JoinRing(ctx, req.(*JoinRingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_FindPredecessor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindPredecessorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).FindPredecessor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/FindPredecessor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).FindPredecessor(ctx, req.(*FindPredecessorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_FindSuccessor_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSuccessorRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).FindSuccessor(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/FindSuccessor",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).FindSuccessor(ctx, req.(*FindSuccessorRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_ClosestPrecedingFinger_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClosestPrecedingFingerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).ClosestPrecedingFinger(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/ClosestPrecedingFinger",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).ClosestPrecedingFinger(ctx, req.(*ClosestPrecedingFingerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_SetPredecessorNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPredecessorNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).SetPredecessorNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/SetPredecessorNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).SetPredecessorNode(ctx, req.(*SetPredecessorNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_SetSuccessorNode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetSuccessorNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).SetSuccessorNode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/SetSuccessorNode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).SetSuccessorNode(ctx, req.(*SetSuccessorNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_Notify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NotifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).Notify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/Notify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).Notify(ctx, req.(*NotifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Chord_X_Stabilize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StabilizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ChordServer).X_Stabilize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Chord/X_Stabilize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ChordServer).X_Stabilize(ctx, req.(*StabilizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Chord_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Chord",
	HandlerType: (*ChordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNodeInfo",
			Handler:    _Chord_GetNodeInfo_Handler,
		},
		{
			MethodName: "JoinRing",
			Handler:    _Chord_JoinRing_Handler,
		},
		{
			MethodName: "FindPredecessor",
			Handler:    _Chord_FindPredecessor_Handler,
		},
		{
			MethodName: "FindSuccessor",
			Handler:    _Chord_FindSuccessor_Handler,
		},
		{
			MethodName: "ClosestPrecedingFinger",
			Handler:    _Chord_ClosestPrecedingFinger_Handler,
		},
		{
			MethodName: "SetPredecessorNode",
			Handler:    _Chord_SetPredecessorNode_Handler,
		},
		{
			MethodName: "SetSuccessorNode",
			Handler:    _Chord_SetSuccessorNode_Handler,
		},
		{
			MethodName: "Notify",
			Handler:    _Chord_Notify_Handler,
		},
		{
			MethodName: "__Stabilize",
			Handler:    _Chord_X_Stabilize_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chordio.proto",
}
